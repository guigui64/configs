# Enable mouse mode
set -g mouse on

# but now home and end keys don't work in bash
bind -n End send-key Escape A
bind -n Home send-key Escape I

# Split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# zoom with Alt-Z
bind -n M-z resize-pane -Z

# Move in windows
bind -n C-Left previous-window
bind -n C-Right next-window

# Move windows to the left/right
bind -n C-S-Left swap-window -t -1
bind -n C-S-Right swap-window -t +1

# Colors
# Gruvbox dark
# status_bg=colour237
# status_fg=colour223
# status_layer0_bg=colour208
# status_layer0_fg=${status_bg}
# status_layer1_bg=colour248
# status_layer1_fg=${status_bg}
# status_layer2_bg=colour241
# status_layer2_fg=colour248
# status_layer3_bg=${status_bg}
# status_layer3_fg=colour246
# status_window_bg=colour109
# status_window_fg=${status_bg}
# status_window_current_bg=colour142
# status_window_current_fg=${status_bg}
# pane_border=${status_bg}
# pane_active_border=${status_fg}
# Solarized
status_bg=colour32
status_fg=colour15
status_layers_fg=colour15
status_layer0_bg=colour0
status_layer0_fg=${status_layers_fg}
status_layer1_bg=colour10
status_layer1_fg=${status_layers_fg}
status_layer2_bg=colour12
status_layer2_fg=${status_layers_fg}
status_layer3_bg=${status_bg}
status_layer3_fg=colour12
status_window_bg=colour10
status_window_fg=${status_layers_fg}
status_window_current_bg=colour0
status_window_current_fg=${status_layers_fg}
pane_border=colour250
pane_active_border=${status_bg}

# default statusbar color
set-option -g status-style bg=${status_bg},fg=${status_fg}

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# pane border
set-option -g pane-active-border-style fg=${pane_active_border} #fg2
set-option -g pane-border-style fg=${pane_border} #bg1

# message infos
set-option -g message-style bg=${status_layer1_bg},fg=${status_layer1_fg}

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set-option -g display-panes-active-colour ${pane_active_border} #fg2
set-option -g display-panes-colour ${pane_border} #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "centre"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator " "

# Powerline-like
set-option -g status-left "#[fg=${status_layer0_fg}, bg=${status_layer0_bg}] #(whoami) #[fg=${status_layer0_bg}, bg=${status_layer1_bg}]\ue0b0#[fg=${status_layer1_fg}, bg=${status_layer1_bg}] #H #[fg=${status_layer1_bg}, bg=${status_layer2_bg}]\ue0b0#[fg=${status_layer2_fg}, bg=${status_layer2_bg}] session #S #[fg=${status_layer2_bg}, bg=${status_bg}]\ue0b0"
set-option -g status-right "#[fg=${status_layer3_fg}, bg=${status_layer3_bg}] #(upower -i `upower -e | grep battery` | grep percentage | awk '{print $2}') #[fg=${status_layer2_bg}, bg=${status_layer3_bg}]\ue0b2#[fg=${status_layer2_fg}, bg=${status_layer2_bg}] #(tmux-mem-cpu-load -a 0) #[fg=${status_layer1_bg}, bg=${status_layer2_bg}]\ue0b2#[fg=${status_layer1_fg}, bg=${status_layer1_bg}] %a %Y-%m-%d #[fg=${status_layer0_bg}, bg=${status_layer1_bg}]\ue0b2#[fg=${status_layer0_fg}, bg=${status_layer0_bg}] %H:%M:%S "
# *NOT* powerline-like
# set-option -g status-left "#[fg=${status_layer0_fg}, bg=${status_layer0_bg}] #(whoami) #[fg=${status_layer1_fg}, bg=${status_layer1_bg}] #H #[fg=${status_layer2_fg}, bg=${status_layer2_bg}] session #S "
# set-option -g status-right "#[fg=${status_layer3_fg}, bg=${status_layer3_bg}] #(upower -i `upower -e | grep battery` | grep percentage | awk '{print $2}') #[fg=${status_layer2_fg}, bg=${status_layer2_bg}] #(tmux-mem-cpu-load -a 0) #[fg=${status_layer1_fg}, bg=${status_layer1_bg}] %a %Y-%m-%d #[fg=${status_layer0_fg}, bg=${status_layer0_bg}] %H:%M:%S "

set-window-option -g window-status-current-format "#[fg=${status_window_current_fg}, bg=${status_window_current_bg}, bold] #I:#W#F "
set-window-option -g window-status-format "#[fg=${status_window_fg}, bg=${status_window_bg}, bold] #I:#W#F "

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Scroll buffer size (default is 2000)
set-option -g history-limit 10000

# Easy reloading
bind r source ~/.tmux.conf\; display "~/.tmux.conf sourced!"

# Usual layout
bind u source ~/git/configs/tmux/usual-layout-simple.conf
bind v source ~/git/configs/tmux/usual-layout-full.conf

# tmux-resurrect (prefix + ctrl-s for save and prefix + ctrl-r for restore)
set -g @resurrect-strategy-vim 'session'
run-shell ~/git/configs/tmux/tmux-resurrect/resurrect.tmux

# Emulate scrolling by sending up and down keys if these commands are running in the pane
tmux_commands_with_legacy_scroll="nano less more man"

bind-key -T root WheelUpPane \
    if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Up Up Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
    if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Down Down Down" "send -Mt="'
